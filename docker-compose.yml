version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    env_file:
      - ./frontend/.env
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app-network

  postgres:
    image: postgres:15
    ports:
      - "5433:5432" # Expose PostgreSQL on port 5433 since 5432 is used by PostgreSQL in the host
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=gardenplanner
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./gardenPlannerBackend
    ports:
      - "8000:8000"
    volumes:
      - ./gardenPlannerBackend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - ./gardenPlannerBackend/.env
    environment:
      - DEBUG=True
      - DB_NAME=gardenplanner
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
    command: >
      sh -c "python manage.py migrate && 
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  mobile:
    build:
      context: ./MOBILE/CommunityGardenApp
    ports:
      - "19000:19000"  # Expo
      - "19001:19001"  # Metro
      - "19002:19002"  # DevTools
      - "8081:8081" # React Native Web
    volumes:
      - ./MOBILE/CommunityGardenApp:/app
      - /app/node_modules
    env_file:
      - ./MOBILE/CommunityGardenApp/.env
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  static_volume:
  media_volume:
  postgres_data: